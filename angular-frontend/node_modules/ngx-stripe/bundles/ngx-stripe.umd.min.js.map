{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../projects/ngx-stripe/src/lib/interfaces/ngx-stripe.interface.ts","../../../projects/ngx-stripe/src/lib/services/window-ref.service.ts","../../../projects/ngx-stripe/src/lib/services/document-ref.service.ts","../../../projects/ngx-stripe/src/lib/services/api-loader.service.ts","../../../projects/ngx-stripe/src/lib/services/stripe-instance.class.ts","../../../projects/ngx-stripe/src/lib/services/stripe.service.ts","../../../projects/ngx-stripe/src/lib/services/stripe-elements.service.ts","../../../projects/ngx-stripe/src/lib/components/card.component.ts","../../../projects/ngx-stripe/src/lib/directives/card-group.directive.ts","../../../projects/ngx-stripe/src/lib/components/card-number.component.ts","../../../projects/ngx-stripe/src/lib/components/card-expiry.component.ts","../../../projects/ngx-stripe/src/lib/components/card-cvc.component.ts","../../../projects/ngx-stripe/src/lib/components/fpx-bank.component.ts","../../../projects/ngx-stripe/src/lib/components/ideal-bank.component.ts","../../../projects/ngx-stripe/src/lib/components/iban.component.ts","../../../projects/ngx-stripe/src/lib/components/au-bank-account.component.ts","../../../projects/ngx-stripe/src/lib/components/payment-request-button.component.ts","../../../projects/ngx-stripe/src/lib/services/stripe-factory.service.ts","../../../projects/ngx-stripe/src/lib/ngx-stripe.module.ts"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","__read","o","m","r","i","ar","error","__spread","arguments","concat","STRIPE_PUBLISHABLE_KEY","InjectionToken","STRIPE_OPTIONS","WindowRef","platformId","prototype","getNativeWindow","isPlatformBrowser","window","Injectable","Inject","args","PLATFORM_ID","DocumentRef","getNativeDocument","document","LazyStripeAPILoader","status","BehaviorSubject","loaded","loading","asStream","load","asObservable","isReady","getValue","_this","isPlatformServer","hasOwnProperty","Object","assign","script","createElement","type","async","defer","src","onload","onerror","appendChild","StripeInstance","loader","key","options","stripe$","undefined","stripe","pipe","filter","Boolean","first","map","Stripe","subscribe","stripeInstance","getInstance","elements","redirectToCheckout","switchMap","from","confirmAuBecsDebitPayment","clientSecret","data","confirmBancontactPayment","confirmCardPayment","confirmEpsPayment","confirmFpxPayment","confirmGiropayPayment","confirmIdealPayment","confirmP24Payment","confirmSepaDebitPayment","handleCardAction","createPaymentMethod","paymentMethodData","retrievePaymentIntent","confirmAuBecsDebitSetup","confirmCardSetup","confirmSepaDebitSetup","retrieveSetupIntent","paymentRequest","createToken","tokenType","createSource","a","b","retrieveSource","source","handleCardPayment","element","confirmPaymentIntent","handleCardSetup","confirmSetupIntent","handleFpxPayment","StripeService","getStripeReference","setKey","changeKey","StripeElementsService","stripeService","keys","mergeOptions","containerClass","classes","base","complete","empty","focus","invalid","webkitAutoFill","StripeCardComponent","stripeElementsService","EventEmitter","blur","change","ready","escape","state","ngOnChanges","changes","updateElements","elementsOptions","_a","toPromise","_b","update","ngOnInit","ngOnDestroy","destroy","getCard","create","on","ev","emit","mount","stripeElementRef","nativeElement","Component","selector","template","ViewChild","Input","Output","StripeCardGroupDirective","_elements","Directive","StripeCardNumberComponent","cardGroup","setupElement","Error","cardGroupSubscription","unsubscribe","getCardNumber","decorators","Optional","StripeCardExpiryComponent","getCardExpiry","StripeCardCvcComponent","getCardCvc","StripeFpxBankComponent","getFpxBank","accountHolderType","StripeIdealBankComponent","getIdealBank","StripeIbanComponent","getIban","StripeAuBankAccountComponent","getAuBankAccount","StripePaymentRequestButtonComponent","token","paymentMethod","cancel","shippingaddresschange","shippingoptionchange","notavailable","paymentOptions","updateRequest","canMakePayment","paymentRequestButton","show","getButton","StripeFactoryService","baseKey","baseOptions","components","directives","NgxStripeModule","forRoot","publishableKey","ngModule","providers","provide","useValue","forChild","NgModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { InjectionToken } from '@angular/core';\n\nimport { StripeConstructorOptions } from '@stripe/stripe-js';\n\nexport const STRIPE_PUBLISHABLE_KEY = new InjectionToken<string>(\n  'Stripe Publishable Key'\n);\nexport const STRIPE_OPTIONS = new InjectionToken<StripeConstructorOptions>(\n  'Stripe Options'\n);\n","import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class WindowRef {\n  constructor(@Inject(PLATFORM_ID) public platformId: any) {}\n\n  public getNativeWindow(): Window {\n    if (isPlatformBrowser(this.platformId)) {\n      return window;\n    }\n    return {} as Window;\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class DocumentRef {\n  constructor(@Inject(PLATFORM_ID) public platformId: any) {}\n\n  public getNativeDocument(): Document {\n    if (isPlatformBrowser(this.platformId)) {\n      return document;\n    }\n    return {} as Document;\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { Observable, BehaviorSubject } from 'rxjs';\n\nimport { WindowRef } from './window-ref.service';\nimport { DocumentRef } from './document-ref.service';\n\nexport interface LazyStripeAPILoaderStatus {\n  loaded: boolean;\n  loading: boolean;\n  error: boolean;\n}\n\n@Injectable()\nexport class LazyStripeAPILoader {\n  public status = new BehaviorSubject<LazyStripeAPILoaderStatus>({\n    error: false,\n    loaded: false,\n    loading: false\n  });\n\n  constructor(\n    @Inject(PLATFORM_ID) public platformId: any,\n    public window: WindowRef,\n    public document: DocumentRef\n  ) {}\n\n  public asStream(): Observable<LazyStripeAPILoaderStatus> {\n    this.load();\n    return this.status.asObservable();\n  }\n\n  public isReady(): boolean {\n    return this.status.getValue().loaded;\n  }\n\n  public load() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    const status: LazyStripeAPILoaderStatus = this.status.getValue();\n    if (this.window.getNativeWindow().hasOwnProperty('Stripe')) {\n      this.status.next({\n        error: false,\n        loaded: true,\n        loading: false\n      });\n    } else if (!status.loaded && !status.loading) {\n      this.status.next({\n        ...status,\n        loading: true\n      });\n\n      const script = this.document.getNativeDocument().createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.defer = true;\n      script.src = 'https://js.stripe.com/v3/';\n\n      script.onload = () => {\n        this.status.next({\n          error: false,\n          loaded: true,\n          loading: false\n        });\n      };\n\n      script.onerror = () => {\n        this.status.next({\n          error: true,\n          loaded: false,\n          loading: false\n        });\n      };\n\n      this.document.getNativeDocument().body.appendChild(script);\n    }\n  }\n}\n","import { BehaviorSubject, from, Observable } from 'rxjs';\nimport { filter, first, map, switchMap } from 'rxjs/operators';\n\nimport {\n  ConfirmAuBecsDebitPaymentData,\n  ConfirmAuBecsDebitSetupData,\n  ConfirmBancontactPaymentData,\n  ConfirmBancontactPaymentOptions,\n  ConfirmCardPaymentData,\n  ConfirmCardPaymentOptions,\n  ConfirmEpsPaymentData,\n  ConfirmEpsPaymentOptions,\n  ConfirmFpxPaymentData,\n  ConfirmFpxPaymentOptions,\n  ConfirmGiropayPaymentData,\n  ConfirmGiropayPaymentOptions,\n  ConfirmIdealPaymentData,\n  ConfirmIdealPaymentOptions,\n  ConfirmP24PaymentData,\n  ConfirmP24PaymentOptions,\n  ConfirmCardSetupData,\n  ConfirmCardSetupOptions,\n  ConfirmSepaDebitPaymentData,\n  ConfirmSepaDebitSetupData,\n  CreatePaymentMethodData,\n  CreateSourceData,\n  CreateTokenIbanData,\n  CreateTokenCardData,\n  CreateTokenPiiData,\n  CreateTokenBankAccountData,\n  PaymentIntent,\n  PaymentMethod,\n  PaymentRequest,\n  PaymentRequestOptions,\n  RedirectToCheckoutOptions,\n  RetrieveSourceParam,\n  SetupIntent,\n  Stripe,\n  StripeCardElement,\n  StripeCardNumberElement,\n  StripeCardCvcElement,\n  StripeConstructorOptions,\n  StripeElements,\n  StripeElementsOptions,\n  StripeElement,\n  StripeError,\n  StripeIbanElement,\n  Source,\n  Token,\n  TokenCreateParams\n} from '@stripe/stripe-js';\n\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { WindowRef } from './window-ref.service';\nimport {\n  LazyStripeAPILoader,\n  LazyStripeAPILoaderStatus\n} from './api-loader.service';\n\nexport class StripeInstance implements StripeServiceInterface {\n  private stripe$ = new BehaviorSubject<Stripe | undefined>(undefined);\n  stripe = this.stripe$\n    .asObservable()\n    .pipe(filter((stripe) => Boolean(stripe)));\n\n  constructor(\n    private loader: LazyStripeAPILoader,\n    private window: WindowRef,\n    private key: string,\n    private options?: StripeConstructorOptions\n  ) {\n    this.loader\n      .asStream()\n      .pipe(\n        filter((status: LazyStripeAPILoaderStatus) => status.loaded === true),\n        first(),\n        map(() => (this.window.getNativeWindow() as any).Stripe)\n      )\n      .subscribe((stripeInstance: any) => {\n        const stripe = this.options\n          ? (stripeInstance(this.key, this.options) as Stripe)\n          : (stripeInstance(this.key) as Stripe);\n\n        this.stripe$.next(stripe);\n      });\n  }\n\n  getInstance(): Stripe | undefined {\n    return this.stripe$.getValue();\n  }\n\n  elements(options?: StripeElementsOptions): Observable<StripeElements> {\n    return this.stripe$.asObservable().pipe(\n      filter((stripe) => Boolean(stripe)),\n      map((stripe) => stripe.elements(options)),\n      first()\n    );\n  }\n\n  redirectToCheckout(\n    options?: RedirectToCheckoutOptions\n  ): Observable<never | { error: StripeError }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.redirectToCheckout(options))),\n      first()\n    );\n  }\n\n  confirmAuBecsDebitPayment(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmAuBecsDebitPayment(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  confirmBancontactPayment(\n    clientSecret: string,\n    data?: ConfirmBancontactPaymentData,\n    options?: ConfirmBancontactPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmBancontactPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmCardPayment(\n    clientSecret: string,\n    data?: ConfirmCardPaymentData,\n    options?: ConfirmCardPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmCardPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmEpsPayment(\n    clientSecret: string,\n    data?: ConfirmEpsPaymentData,\n    options?: ConfirmEpsPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmEpsPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmFpxPayment(\n    clientSecret: string,\n    data?: ConfirmFpxPaymentData,\n    options?: ConfirmFpxPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmFpxPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmGiropayPayment(\n    clientSecret: string,\n    data?: ConfirmGiropayPaymentData,\n    options?: ConfirmGiropayPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmGiropayPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmIdealPayment(\n    clientSecret: string,\n    data?: ConfirmIdealPaymentData,\n    options?: ConfirmIdealPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmIdealPayment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmP24Payment(\n    clientSecret: string,\n    data?: ConfirmP24PaymentData,\n    options?: ConfirmP24PaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmP24Payment(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmSepaDebitPayment(\n    clientSecret: string,\n    data?: ConfirmSepaDebitPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmSepaDebitPayment(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  handleCardAction(\n    clientSecret: string\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.handleCardAction(clientSecret))),\n      first()\n    );\n  }\n\n  createPaymentMethod(\n    paymentMethodData: CreatePaymentMethodData\n  ): Observable<{\n    paymentMethod?: PaymentMethod;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.createPaymentMethod(paymentMethodData))\n      ),\n      first()\n    );\n  }\n\n  retrievePaymentIntent(\n    clientSecret: string\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.retrievePaymentIntent(clientSecret))),\n      first()\n    );\n  }\n\n  confirmAuBecsDebitSetup(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmAuBecsDebitSetup(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  confirmCardSetup(\n    clientSecret: string,\n    data?: ConfirmCardSetupData,\n    options?: ConfirmCardSetupOptions\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmCardSetup(clientSecret, data, options))\n      ),\n      first()\n    );\n  }\n\n  confirmSepaDebitSetup(\n    clientSecret: string,\n    data?: ConfirmSepaDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from(stripe.confirmSepaDebitSetup(clientSecret, data))\n      ),\n      first()\n    );\n  }\n\n  retrieveSetupIntent(\n    clientSecret: string\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.confirmSepaDebitSetup(clientSecret))),\n      first()\n    );\n  }\n\n  paymentRequest(options: PaymentRequestOptions): PaymentRequest | undefined {\n    const stripe = this.getInstance();\n\n    return stripe ? stripe.paymentRequest(options) : undefined;\n  }\n\n  createToken(\n    tokenType: StripeIbanElement,\n    data: CreateTokenIbanData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: StripeCardElement | StripeCardNumberElement,\n    data?: CreateTokenCardData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'pii',\n    data: CreateTokenPiiData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'bank_account',\n    data: CreateTokenBankAccountData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'cvc_update',\n    element?: StripeCardCvcElement\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'account',\n    data: TokenCreateParams.Account\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'person',\n    data: TokenCreateParams.Person\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(tokenType, data) {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.createToken(tokenType, data))),\n      first()\n    );\n  }\n\n  createSource(\n    element: StripeElement,\n    sourceData: CreateSourceData\n  ): Observable<{ source?: Source; error?: StripeError }>;\n  createSource(\n    sourceData: CreateSourceData\n  ): Observable<{ source?: Source; error?: StripeError }>;\n  createSource(a, b?): Observable<{ source?: Source; error?: StripeError }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.createSource(a, b))),\n      first()\n    );\n  }\n\n  retrieveSource(\n    source: RetrieveSourceParam\n  ): Observable<{ source?: Source; error?: StripeError }> {\n    return this.stripe.pipe(\n      switchMap((stripe) => from(stripe.retrieveSource(source))),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardPayment(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).handleCardPayment(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmPaymentIntent(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).confirmPaymentIntent(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardSetup(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).handleCardSetup(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmSetupIntent(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).confirmSetupIntent(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n\n  /**\n   * @deprecated\n   */\n  handleFpxPayment(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.pipe(\n      switchMap((stripe) =>\n        from((stripe as any).handleFpxPayment(clientSecret, element, data))\n      ),\n      first()\n    );\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport {\n  ConfirmAuBecsDebitPaymentData,\n  ConfirmAuBecsDebitSetupData,\n  ConfirmBancontactPaymentData,\n  ConfirmBancontactPaymentOptions,\n  ConfirmCardPaymentData,\n  ConfirmCardPaymentOptions,\n  ConfirmEpsPaymentData,\n  ConfirmEpsPaymentOptions,\n  ConfirmFpxPaymentData,\n  ConfirmFpxPaymentOptions,\n  ConfirmGiropayPaymentData,\n  ConfirmGiropayPaymentOptions,\n  ConfirmIdealPaymentData,\n  ConfirmIdealPaymentOptions,\n  ConfirmP24PaymentData,\n  ConfirmP24PaymentOptions,\n  ConfirmCardSetupData,\n  ConfirmCardSetupOptions,\n  ConfirmSepaDebitPaymentData,\n  ConfirmSepaDebitSetupData,\n  CreatePaymentMethodData,\n  CreateSourceData,\n  CreateTokenIbanData,\n  CreateTokenCardData,\n  CreateTokenPiiData,\n  CreateTokenBankAccountData,\n  PaymentIntent,\n  PaymentMethod,\n  PaymentRequest,\n  PaymentRequestOptions,\n  RedirectToCheckoutOptions,\n  RetrieveSourceParam,\n  SetupIntent,\n  Stripe,\n  StripeCardElement,\n  StripeCardNumberElement,\n  StripeCardCvcElement,\n  StripeConstructorOptions,\n  StripeElements,\n  StripeElementsOptions,\n  StripeElement,\n  StripeError,\n  StripeIbanElement,\n  Source,\n  Token,\n  TokenCreateParams\n} from '@stripe/stripe-js';\n\nimport {\n  STRIPE_PUBLISHABLE_KEY,\n  STRIPE_OPTIONS\n} from '../interfaces/ngx-stripe.interface';\nimport { StripeServiceInterface } from '../interfaces/stripe-instance.interface';\n\nimport { WindowRef } from './window-ref.service';\nimport {\n  LazyStripeAPILoader,\n  LazyStripeAPILoaderStatus\n} from './api-loader.service';\n\nimport { StripeInstance } from './stripe-instance.class';\n\n@Injectable()\nexport class StripeService implements StripeServiceInterface {\n  stripe!: StripeInstance;\n\n  constructor(\n    @Inject(STRIPE_PUBLISHABLE_KEY) public key: string,\n    @Inject(STRIPE_OPTIONS) public options: StripeConstructorOptions,\n    public loader: LazyStripeAPILoader,\n    public window: WindowRef\n  ) {\n    if (key) {\n      this.stripe = new StripeInstance(this.loader, this.window, key, options);\n    }\n  }\n\n  getStripeReference(): Observable<any> {\n    return this.loader.asStream().pipe(\n      filter((status: LazyStripeAPILoaderStatus) => status.loaded === true),\n      map(() => (this.window.getNativeWindow() as any).Stripe)\n    );\n  }\n\n  getInstance(): Stripe | undefined {\n    return this.stripe.getInstance();\n  }\n\n  setKey(key: string, options?: StripeConstructorOptions) {\n    return this.changeKey(key, options);\n  }\n\n  changeKey(key: string, options?: StripeConstructorOptions) {\n    this.stripe = new StripeInstance(this.loader, this.window, key, options);\n\n    return this.stripe;\n  }\n\n  elements(options?: StripeElementsOptions): Observable<StripeElements> {\n    return this.stripe.elements(options);\n  }\n\n  redirectToCheckout(\n    options?: RedirectToCheckoutOptions\n  ): Observable<never | { error: StripeError }> {\n    return this.stripe.redirectToCheckout(options);\n  }\n\n  confirmAuBecsDebitPayment(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmAuBecsDebitPayment(clientSecret, data);\n  }\n\n  confirmBancontactPayment(\n    clientSecret: string,\n    data?: ConfirmBancontactPaymentData,\n    options?: ConfirmBancontactPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmBancontactPayment(clientSecret, data, options);\n  }\n\n  confirmCardPayment(\n    clientSecret: string,\n    data?: ConfirmCardPaymentData,\n    options?: ConfirmCardPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmCardPayment(clientSecret, data, options);\n  }\n\n  confirmEpsPayment(\n    clientSecret: string,\n    data?: ConfirmEpsPaymentData,\n    options?: ConfirmEpsPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmEpsPayment(clientSecret, data, options);\n  }\n\n  confirmFpxPayment(\n    clientSecret: string,\n    data?: ConfirmFpxPaymentData,\n    options?: ConfirmFpxPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmFpxPayment(clientSecret, data, options);\n  }\n\n  confirmGiropayPayment(\n    clientSecret: string,\n    data?: ConfirmGiropayPaymentData,\n    options?: ConfirmGiropayPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmGiropayPayment(clientSecret, data, options);\n  }\n\n  confirmIdealPayment(\n    clientSecret: string,\n    data?: ConfirmIdealPaymentData,\n    options?: ConfirmIdealPaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmIdealPayment(clientSecret, data, options);\n  }\n\n  confirmP24Payment(\n    clientSecret: string,\n    data?: ConfirmP24PaymentData,\n    options?: ConfirmP24PaymentOptions\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmP24Payment(clientSecret, data, options);\n  }\n\n  confirmSepaDebitPayment(\n    clientSecret: string,\n    data?: ConfirmSepaDebitPaymentData\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmSepaDebitPayment(clientSecret, data);\n  }\n\n  handleCardAction(\n    clientSecret: string\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.handleCardAction(clientSecret);\n  }\n\n  createPaymentMethod(\n    paymentMethodData: CreatePaymentMethodData\n  ): Observable<{\n    paymentMethod?: PaymentMethod;\n    error?: StripeError;\n  }> {\n    return this.stripe.createPaymentMethod(paymentMethodData);\n  }\n\n  retrievePaymentIntent(\n    clientSecret: string\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.retrievePaymentIntent(clientSecret);\n  }\n\n  confirmAuBecsDebitSetup(\n    clientSecret: string,\n    data?: ConfirmAuBecsDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmAuBecsDebitSetup(clientSecret, data);\n  }\n\n  confirmCardSetup(\n    clientSecret: string,\n    data?: ConfirmCardSetupData,\n    options?: ConfirmCardSetupOptions\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmCardSetup(clientSecret, data, options);\n  }\n\n  confirmSepaDebitSetup(\n    clientSecret: string,\n    data?: ConfirmSepaDebitSetupData\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmSepaDebitSetup(clientSecret, data);\n  }\n\n  retrieveSetupIntent(\n    clientSecret: string\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.retrieveSetupIntent(clientSecret);\n  }\n\n  paymentRequest(options: PaymentRequestOptions): PaymentRequest | undefined {\n    return this.stripe.paymentRequest(options);\n  }\n\n  createToken(\n    tokenType: StripeIbanElement,\n    data: CreateTokenIbanData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: StripeCardElement | StripeCardNumberElement,\n    data?: CreateTokenCardData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'pii',\n    data: CreateTokenPiiData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'bank_account',\n    data: CreateTokenBankAccountData\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'cvc_update',\n    element?: StripeCardCvcElement\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'account',\n    data: TokenCreateParams.Account\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(\n    tokenType: 'person',\n    data: TokenCreateParams.Person\n  ): Observable<{ token?: Token; error?: StripeError }>;\n  createToken(tokenType, data) {\n    return this.stripe.createToken(tokenType, data);\n  }\n\n  createSource(\n    element: StripeElement,\n    sourceData: CreateSourceData\n  ): Observable<{ source?: Source; error?: StripeError }>;\n  createSource(\n    sourceData: CreateSourceData\n  ): Observable<{ source?: Source; error?: StripeError }>;\n  createSource(a, b?): Observable<{ source?: Source; error?: StripeError }> {\n    return this.stripe.createSource(a, b);\n  }\n\n  retrieveSource(\n    source: RetrieveSourceParam\n  ): Observable<{ source?: Source; error?: StripeError }> {\n    return this.stripe.retrieveSource(source);\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardPayment(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.handleCardPayment(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmPaymentIntent(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    paymentIntent?: PaymentIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmPaymentIntent(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  handleCardSetup(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.handleCardSetup(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  confirmSetupIntent(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.confirmSetupIntent(clientSecret, element, data);\n  }\n\n  /**\n   * @deprecated\n   */\n  handleFpxPayment(\n    clientSecret: string,\n    element?,\n    data?\n  ): Observable<{\n    setupIntent?: SetupIntent;\n    error?: StripeError;\n  }> {\n    return this.stripe.handleFpxPayment(clientSecret, element, data);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport {\n  PaymentRequest,\n  PaymentRequestOptions,\n  StripeCardElementOptions,\n  StripeAuBankAccountElementOptions,\n  StripeCardNumberElementOptions,\n  StripeCardExpiryElementOptions,\n  StripeElements,\n  StripeElementsOptions,\n  StripeFpxBankElementOptions,\n  StripeIbanElementOptions,\n  StripeIdealBankElementOptions,\n  StripePaymentRequestButtonElementOptions\n} from '@stripe/stripe-js';\n\nimport { StripeService } from './stripe.service';\n\n@Injectable()\nexport class StripeElementsService {\n  constructor(private stripeService: StripeService) {}\n\n  elements(\n    stripe,\n    options: StripeElementsOptions = {}\n  ): Observable<StripeElements> {\n    if (stripe) {\n      if (Object.keys(options).length > 0) {\n        return stripe.elements(options);\n      }\n      return stripe.elements();\n    } else {\n      if (Object.keys(options).length > 0) {\n        return this.stripeService.elements(options);\n      }\n      return this.stripeService.elements();\n    }\n  }\n\n  paymentRequest(\n    stripe,\n    options: PaymentRequestOptions\n  ): PaymentRequest | undefined {\n    return stripe\n      ? stripe.paymentRequest(options)\n      : this.stripeService.paymentRequest(options);\n  }\n\n  mergeOptions(\n    options: StripeCardElementOptions,\n    containerClass: string\n  ): StripeCardElementOptions;\n  mergeOptions(\n    options: StripeCardNumberElementOptions,\n    containerClass: string\n  ): StripeCardNumberElementOptions;\n  mergeOptions(\n    options: StripeCardExpiryElementOptions,\n    containerClass: string\n  ): StripeCardExpiryElementOptions;\n  mergeOptions(\n    options: StripeFpxBankElementOptions,\n    containerClass: string\n  ): StripeFpxBankElementOptions;\n  mergeOptions(\n    options: StripeIbanElementOptions,\n    containerClass: string\n  ): StripeIbanElementOptions;\n  mergeOptions(\n    options: StripeIdealBankElementOptions,\n    containerClass: string\n  ): StripeIdealBankElementOptions;\n  mergeOptions(\n    options: StripeAuBankAccountElementOptions,\n    containerClass: string\n  ): StripeAuBankAccountElementOptions;\n  mergeOptions(\n    options: StripePaymentRequestButtonElementOptions,\n    containerClass: string\n  ): StripePaymentRequestButtonElementOptions;\n  mergeOptions(options, containerClass: string) {\n    if (!containerClass || (options && options.classes)) {\n      return options || {};\n    }\n\n    if (!options || !options.classes) {\n      return {\n        ...(options || {}),\n        classes: {\n          base: containerClass,\n          complete: `${containerClass}--complete`,\n          empty: `${containerClass}--empty`,\n          focus: `${containerClass}--focus`,\n          invalid: `${containerClass}--invalid`,\n          webkitAutoFill: `${containerClass}--webkit-autoFill`\n        }\n      };\n    }\n\n    return options || {};\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeCardElementOptions,\n  StripeCardElement,\n  StripeElements,\n  StripeCardElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeCardComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeCardElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeCardElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCard() {\n    return this.element;\n  }\n\n  private createElement(options: Partial<StripeCardElementOptions> = {}) {\n    this.element = this.elements.create('card', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\nimport { StripeElements, StripeElementsOptions } from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Directive({\n  selector: 'ngx-stripe-card-group,[ngxStripeCardGroup]'\n})\nexport class StripeCardGroupDirective implements OnInit, OnChanges {\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() elements = new EventEmitter<StripeElements>();\n\n  _elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const elementsOptions = this.elementsOptions;\n    const stripe = this.stripe;\n\n    if (changes.elementsOptions || changes.stripe || !this._elements) {\n      this._elements = await this.stripeElementsService\n        .elements(stripe, elementsOptions)\n        .toPromise();\n      this.elements.emit(this._elements);\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this._elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.elements.emit(this._elements);\n\n      this.state = 'ready';\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElements,\n  StripeCardNumberElement,\n  StripeCardNumberElementOptions,\n  StripeCardNumberElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeCardGroupDirective } from '../directives/card-group.directive';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card-number',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeCardNumberComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardNumberElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardNumberElementOptions>;\n\n  @Output() load = new EventEmitter<StripeCardNumberElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardNumberElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  cardGroupSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private cardGroup: StripeCardGroupDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.options || changes.containerClass) {\n      this.setupElement('options');\n    }\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(\n        (elements: StripeElements) => {\n          this.elements = elements;\n          this.setupElement('elements');\n        }\n      );\n    } else {\n      throw new Error(\n        'StripeCardNumberComponent must have StripeCardGroupDirective parent'\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeCardNumberElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCardNumber() {\n    return this.element;\n  }\n\n  private setupElement(source: 'elements' | 'options') {\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardNumber', options);\n      this.element.on('change', (ev) => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n\n      this.element.mount(this.stripeElementRef.nativeElement);\n\n      this.load.emit(this.element);\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElements,\n  StripeCardExpiryElement,\n  StripeCardExpiryElementOptions,\n  StripeCardExpiryElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeCardGroupDirective } from '../directives/card-group.directive';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card-expiry',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeCardExpiryComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardExpiryElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardExpiryElementOptions>;\n\n  @Output() load = new EventEmitter<StripeCardExpiryElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardExpiryElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  cardGroupSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private cardGroup: StripeCardGroupDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.options || changes.containerClass) {\n      this.setupElement('options');\n    }\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(\n        (elements: StripeElements) => {\n          this.elements = elements;\n          this.setupElement('elements');\n        }\n      );\n    } else {\n      throw new Error(\n        'StripeCardExpiryComponent must have StripeCardGroupDirective parent'\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeCardExpiryElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCardExpiry() {\n    return this.element;\n  }\n\n  private setupElement(source: 'elements' | 'options') {\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardExpiry', options);\n      this.element.on('change', (ev) => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n\n      this.element.mount(this.stripeElementRef.nativeElement);\n\n      this.load.emit(this.element);\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n  Optional\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport {\n  StripeElements,\n  StripeCardCvcElement,\n  StripeCardCvcElementChangeEvent,\n  StripeCardCvcElementOptions\n} from '@stripe/stripe-js';\n\nimport { StripeCardGroupDirective } from '../directives/card-group.directive';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-card-cvc',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeCardCvcComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeCardCvcElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeCardCvcElementOptions>;\n\n  @Output() load = new EventEmitter<StripeCardCvcElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeCardCvcElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  cardGroupSubscription: Subscription;\n\n  constructor(\n    public stripeElementsService: StripeElementsService,\n    @Optional() private cardGroup: StripeCardGroupDirective\n  ) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.options || changes.containerClass) {\n      this.setupElement('options');\n    }\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(\n        (elements: StripeElements) => {\n          this.elements = elements;\n          this.setupElement('elements');\n        }\n      );\n    } else {\n      throw new Error(\n        'StripeCardCvcComponent must have StripeCardGroupDirective parent'\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options: Partial<StripeCardCvcElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getCardCvc() {\n    return this.element;\n  }\n\n  private setupElement(source: 'elements' | 'options') {\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardCvc', options);\n      this.element.on('change', (ev) => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n\n      this.element.mount(this.stripeElementRef.nativeElement);\n\n      this.load.emit(this.element);\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeFpxBankElement,\n  StripeFpxBankElementChangeEvent,\n  StripeFpxBankElementOptions\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-fpx-bank',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeFpxBankComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeFpxBankElement;\n\n  @Input() containerClass: string;\n  @Input() options: StripeFpxBankElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeFpxBankElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeFpxBankElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeFpxBankElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getFpxBank() {\n    return this.element;\n  }\n\n  private createElement(\n    options: StripeFpxBankElementOptions = { accountHolderType: 'individual' }\n  ) {\n    this.element = this.elements.create('fpxBank', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeIdealBankElement,\n  StripeIdealBankElementOptions,\n  StripeIdealBankElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-ideal-bank',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeIdealBankComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeIdealBankElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeIdealBankElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeIdealBankElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeIdealBankElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeIdealBankElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getIdealBank() {\n    return this.element;\n  }\n\n  private createElement(options: Partial<StripeIdealBankElementOptions> = {}) {\n    this.element = this.elements.create('idealBank', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeIbanElement,\n  StripeIbanElementOptions,\n  StripeIbanElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-iban',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeIbanComponent implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeIbanElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeIbanElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeIbanElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeIbanElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeIbanElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getIban() {\n    return this.element;\n  }\n\n  private createElement(options: Partial<StripeIbanElementOptions> = {}) {\n    this.element = this.elements.create('iban', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy\n} from '@angular/core';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  StripeAuBankAccountElement,\n  StripeAuBankAccountElementOptions,\n  StripeAuBankAccountElementChangeEvent\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-au-bank-account',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripeAuBankAccountComponent\n  implements OnInit, OnChanges, OnDestroy {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripeAuBankAccountElement;\n\n  @Input() containerClass: string;\n  @Input() options: Partial<StripeAuBankAccountElementOptions>;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<StripeAuBankAccountElement>();\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() change = new EventEmitter<StripeAuBankAccountElementChangeEvent>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n  @Output() escape = new EventEmitter<void>();\n\n  elements: StripeElements;\n  state: 'notready' | 'starting' | 'ready' = 'notready';\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    this.state = 'starting';\n\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe, this.elementsOptions)\n        .toPromise();\n      updateElements = true;\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.createElement(options);\n      }\n    }\n\n    this.state = 'ready';\n  }\n\n  async ngOnInit() {\n    if (this.state === 'notready') {\n      this.state = 'starting';\n\n      this.elements = await this.stripeElementsService\n        .elements(this.stripe)\n        .toPromise();\n      this.createElement();\n\n      this.state = 'ready';\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options: Partial<StripeAuBankAccountElementOptions>) {\n    this.element.update(options);\n  }\n\n  /**\n   * @deprecated\n   */\n  getAuBankAccount() {\n    return this.element;\n  }\n\n  private createElement(\n    options: Partial<StripeAuBankAccountElementOptions> = {}\n  ) {\n    this.element = this.elements.create('auBankAccount', options);\n    this.element.on('change', (ev) => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n\n    this.element.mount(this.stripeElementRef.nativeElement);\n\n    this.load.emit(this.element);\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ElementRef,\n  EventEmitter,\n  Output,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { Observable, from } from 'rxjs';\n\nimport {\n  StripeElementsOptions,\n  StripeElements,\n  PaymentRequestOptions,\n  PaymentRequest,\n  CanMakePaymentResult,\n  PaymentRequestUpdateOptions,\n  StripePaymentRequestButtonElement,\n  StripePaymentRequestButtonElementOptions,\n  StripePaymentRequestButtonElementClickEvent,\n  PaymentRequestTokenEvent,\n  PaymentRequestPaymentMethodEvent,\n  PaymentRequestSourceEvent,\n  PaymentRequestShippingAddressEvent,\n  PaymentRequestShippingOptionEvent\n} from '@stripe/stripe-js';\n\nimport { StripeInstance } from '../services/stripe-instance.class';\nimport { StripeElementsService } from '../services/stripe-elements.service';\n\n@Component({\n  selector: 'ngx-stripe-payment-request-button',\n  template: `<div class=\"field\" #stripeElementRef></div>`\n})\nexport class StripePaymentRequestButtonComponent implements OnChanges {\n  @ViewChild('stripeElementRef') public stripeElementRef!: ElementRef;\n  element!: StripePaymentRequestButtonElement;\n  paymentRequest!: PaymentRequest;\n\n  @Input() containerClass: string;\n  @Input() paymentOptions: PaymentRequestOptions;\n  @Input() options: StripePaymentRequestButtonElementOptions;\n  @Input() elementsOptions: Partial<StripeElementsOptions>;\n  @Input() stripe: StripeInstance;\n\n  @Output() load = new EventEmitter<{\n    paymentRequestButton: StripePaymentRequestButtonElement;\n    paymentRequest: PaymentRequest;\n  }>();\n\n  @Output() change = new EventEmitter<\n    StripePaymentRequestButtonElementClickEvent\n  >();\n  @Output() blur = new EventEmitter<void>();\n  @Output() focus = new EventEmitter<void>();\n  @Output() ready = new EventEmitter<void>();\n\n  @Output() token = new EventEmitter<PaymentRequestTokenEvent>();\n  @Output() paymentMethod = new EventEmitter<\n    PaymentRequestPaymentMethodEvent\n  >();\n  @Output() source = new EventEmitter<PaymentRequestSourceEvent>();\n  @Output() cancel = new EventEmitter<void>();\n  @Output() shippingaddresschange = new EventEmitter<\n    PaymentRequestShippingAddressEvent\n  >();\n  @Output() shippingoptionchange = new EventEmitter<\n    PaymentRequestShippingOptionEvent\n  >();\n  @Output() notavailable = new EventEmitter<void>();\n\n  elements: StripeElements;\n\n  constructor(public stripeElementsService: StripeElementsService) {}\n\n  async ngOnChanges(changes: SimpleChanges) {\n    const options = this.stripeElementsService.mergeOptions(\n      this.options,\n      this.containerClass\n    );\n    const elementsOptions = this.elementsOptions;\n    const stripe = this.stripe;\n    let updateElements = false;\n\n    if (changes.elementsOptions || changes.stripe || !this.elements) {\n      const elements = await this.stripeElementsService\n        .elements(stripe, elementsOptions)\n        .toPromise();\n      this.elements = elements;\n      updateElements = true;\n    }\n\n    if (changes.paymentOptions && this.paymentRequest) {\n      this.updateRequest(this.paymentOptions);\n    }\n\n    if (\n      changes.options ||\n      changes.containerClass ||\n      !this.element ||\n      updateElements\n    ) {\n      if (this.element && !updateElements) {\n        this.update(options);\n      } else if (this.elements && updateElements) {\n        this.paymentRequest = this.stripeElementsService.paymentRequest(\n          stripe,\n          this.paymentOptions\n        );\n        this.paymentRequest.on('token', (ev) => this.token.emit(ev));\n        this.paymentRequest.on('paymentmethod', (ev) =>\n          this.paymentMethod.emit(ev)\n        );\n        this.paymentRequest.on('source', (ev) => this.source.emit(ev));\n        this.paymentRequest.on('cancel', () => this.cancel.emit());\n        this.paymentRequest.on('shippingaddresschange', (ev) =>\n          this.shippingaddresschange.emit(ev)\n        );\n        this.paymentRequest.on('shippingoptionchange', (ev) =>\n          this.shippingoptionchange.emit(ev)\n        );\n        this.element = this.elements.create('paymentRequestButton', {\n          paymentRequest: this.paymentRequest,\n          ...options\n        });\n\n        this.canMakePayment().subscribe((result) => {\n          if (result) {\n            this.element.on('click', (ev) => this.change.emit(ev));\n            this.element.on('blur', () => this.blur.emit());\n            this.element.on('focus', () => this.focus.emit());\n            this.element.on('ready', () => this.ready.emit());\n\n            this.element.mount(this.stripeElementRef.nativeElement);\n\n            this.load.emit({\n              paymentRequestButton: this.element,\n              paymentRequest: this.paymentRequest\n            });\n          } else {\n            this.notavailable.emit();\n          }\n        });\n      }\n    }\n  }\n\n  canMakePayment(): Observable<CanMakePaymentResult | null> {\n    return from(this.paymentRequest.canMakePayment());\n  }\n\n  update(options: Partial<StripePaymentRequestButtonElementOptions>) {\n    this.element.update(options);\n  }\n\n  updateRequest(options: PaymentRequestUpdateOptions) {\n    this.paymentRequest.update(options);\n  }\n\n  show() {\n    this.paymentRequest.show();\n  }\n\n  /**\n   * @deprecated\n   */\n  getButton() {\n    return this.element;\n  }\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { StripeConstructorOptions } from '@stripe/stripe-js';\n\nimport {\n  STRIPE_OPTIONS,\n  STRIPE_PUBLISHABLE_KEY\n} from '../interfaces/ngx-stripe.interface';\n\nimport { LazyStripeAPILoader } from './api-loader.service';\nimport { WindowRef } from './window-ref.service';\n\nimport { StripeInstance } from './stripe-instance.class';\n\n@Injectable()\nexport class StripeFactoryService {\n  constructor(\n    @Inject(STRIPE_PUBLISHABLE_KEY) public baseKey: string,\n    @Inject(STRIPE_OPTIONS) public baseOptions: StripeConstructorOptions,\n    public loader: LazyStripeAPILoader,\n    public window: WindowRef\n  ) {}\n\n  public create(\n    key?: string,\n    options?: StripeConstructorOptions\n  ): StripeInstance {\n    if (!key && !this.baseKey) {\n      return null;\n    }\n\n    return new StripeInstance(\n      this.loader,\n      this.window,\n      key || this.baseKey,\n      options || this.baseOptions\n    );\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { StripeConstructorOptions } from '@stripe/stripe-js';\n\nimport { StripeCardComponent } from './components/card.component';\nimport { StripeCardNumberComponent } from './components/card-number.component';\nimport { StripeCardExpiryComponent } from './components/card-expiry.component';\nimport { StripeCardCvcComponent } from './components/card-cvc.component';\nimport { StripeFpxBankComponent } from './components/fpx-bank.component';\nimport { StripeIdealBankComponent } from './components/ideal-bank.component';\nimport { StripeIbanComponent } from './components/iban.component';\nimport { StripeAuBankAccountComponent } from './components/au-bank-account.component';\nimport { StripePaymentRequestButtonComponent } from './components/payment-request-button.component';\n\nimport { StripeCardGroupDirective } from './directives/card-group.directive';\n\nimport {\n  STRIPE_OPTIONS,\n  STRIPE_PUBLISHABLE_KEY\n} from './interfaces/ngx-stripe.interface';\n\nimport { LazyStripeAPILoader } from './services/api-loader.service';\nimport { WindowRef } from './services/window-ref.service';\nimport { DocumentRef } from './services/document-ref.service';\nimport { StripeService } from './services/stripe.service';\nimport { StripeFactoryService } from './services/stripe-factory.service';\nimport { StripeElementsService } from './services/stripe-elements.service';\n\nconst components = [\n  StripeCardComponent,\n  StripeCardNumberComponent,\n  StripeCardExpiryComponent,\n  StripeCardCvcComponent,\n  StripeFpxBankComponent,\n  StripeIdealBankComponent,\n  StripeIbanComponent,\n  StripeAuBankAccountComponent,\n  StripePaymentRequestButtonComponent\n];\n\nconst directives = [StripeCardGroupDirective];\n\n@NgModule({\n  declarations: [...components, ...directives],\n  exports: [...components, ...directives]\n})\nexport class NgxStripeModule {\n  public static forRoot(\n    publishableKey?: string,\n    options?: StripeConstructorOptions\n  ): ModuleWithProviders<NgxStripeModule> {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [\n        LazyStripeAPILoader,\n        StripeService,\n        StripeFactoryService,\n        StripeElementsService,\n        WindowRef,\n        DocumentRef,\n        {\n          provide: STRIPE_PUBLISHABLE_KEY,\n          useValue: publishableKey\n        },\n        {\n          provide: STRIPE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n\n  public static forChild(\n    publishableKey?: string,\n    options?: StripeConstructorOptions\n  ): ModuleWithProviders<NgxStripeModule> {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [\n        LazyStripeAPILoader,\n        StripeService,\n        StripeFactoryService,\n        StripeElementsService,\n        WindowRef,\n        DocumentRef,\n        {\n          provide: STRIPE_PUBLISHABLE_KEY,\n          useValue: publishableKey\n        },\n        {\n          provide: STRIPE_OPTIONS,\n          useValue: options\n        }\n      ]\n    };\n  }\n}\n"]}